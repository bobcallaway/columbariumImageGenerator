# Define custom function directory
ARG FUNCTION_DIR="/function"

FROM node:20-buster as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Install build dependencies
RUN apt-get update && \
    apt-get install -y \
    g++ \
    make \
    cmake \
    unzip \
    libcurl4-openssl-dev build-essential autoconf automake libtool m4 python3 libssl-dev tar gzip libkrb5-dev libexecs-dev libgsasl7

# Copy function code
RUN mkdir -p ${FUNCTION_DIR}
WORKDIR ${FUNCTION_DIR}

# Install Node.js dependencies
COPY package.json .puppeteerrc.cjs ${FUNCTION_DIR}
RUN npm install && npx @puppeteer/browsers install chrome-headless-shell@stable


# Install the runtime interface client
RUN npm install aws-lambda-ric

COPY . ${FUNCTION_DIR}

# Grab a fresh slim copy of the image to reduce the final size
FROM node:20-buster-slim

RUN mkdir /aws-lambda && curl -Lo /aws-lambda/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && chmod +x /aws-lambda/aws-lambda-rie

RUN apt-get update && \
    apt-get install -y libfontconfig libgtk2.0-0 libsm6 libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libasound2  libcairo2 libpango-1.0-0 libglib2.0-0
# Required for Node runtimes which use npm@8.6.0+ because
# by default npm writes logs under /home/.npm and Lambda fs is read-only
ENV NPM_CONFIG_CACHE=/tmp/.npm
ENV DBUS_SESSION_BUS_ADDRESS=autolaunch:
ENV FONTCONFIG_CACHE_DIR=/tmp

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

# Set runtime interface client as default command for the container runtime
ENTRYPOINT ["/aws-lambda/aws-lambda-rie"]
# Pass the name of the function handler as an argument to the runtime
CMD ["/usr/local/bin/npx", "aws-lambda-ric", "server.handler"]
