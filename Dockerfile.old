# Define custom function directory
ARG FUNCTION_DIR="/function"

FROM node:20-alpine as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Install build dependencies
RUN apk add --no-cache \
    g++ \
    make \
    cmake \
    unzip \
    curl \
    python3 \
    openssl-dev \
    build-base \
    autoconf \
    automake \
    libtool \
    m4 \
    libssl-dev \
    tar \
    gzip \
    krb5-dev \
    libc-dev \
    libgsasl-dev

# Copy function code
RUN mkdir -p ${FUNCTION_DIR}
WORKDIR ${FUNCTION_DIR}

# Install Node.js dependencies
COPY package.json .puppeteerrc.cjs ${FUNCTION_DIR}
RUN npm install --production && npx @puppeteer/browsers install chrome-headless-shell@stable --no-sandbox

# Install the runtime interface client
RUN npm install --production aws-lambda-ric

COPY . ${FUNCTION_DIR}

RUN mkdir /aws-lambda && curl -Lo /aws-lambda/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && chmod +x /aws-lambda/aws-lambda-rie

# Grab a fresh slim copy of the image to reduce the final size
FROM node:20-alpine

RUN mkdir /aws-lambda
COPY --from=build-image /aws-lambda /aws-lambda

RUN apk add --no-cache \
    libstdc++ \
    fontconfig \
    gtk+2.0 \
    gdk-pixbuf \
    cairo \
    pango \
    glib \
    atk \
    cups \
    dbus \
    nss \
    nspr \
    ttf-freefont

# Required for Node runtimes which use npm@8.6.0+ because
# by default npm writes logs under /home/.npm and Lambda fs is read-only
ENV NPM_CONFIG_CACHE=/tmp/.npm
ENV DBUS_SESSION_BUS_ADDRESS=autolaunch:
ENV FONTCONFIG_CACHE_DIR=/tmp

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

# Set runtime interface client as default command for the container runtime
ENTRYPOINT ["/aws-lambda/aws-lambda-rie"]
# Pass the name of the function handler as an argument to the runtime
CMD ["/usr/local/bin/npx", "aws-lambda-ric", "server.handler"]
